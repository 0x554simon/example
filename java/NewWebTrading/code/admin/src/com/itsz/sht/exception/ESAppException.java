package com.itsz.sht.exception;

/* Generated by Together */

/** This exception is thrown when $Condition$ occurred */

public class ESAppException
    extends Exception
    implements ESErrorCode {

	private static final long serialVersionUID = 1L;
	
	protected int errCode;

    public ESAppException(String message) {
        super(message);
    }

    public ESAppException() {
        super();
    }

    public ESAppException(Exception e) {
        super(e);
        
        if (e instanceof ESErrorCode){
            setErrCode(((ESErrorCode)e).getErrCode());
        }
    }

    public ESAppException(String message, Exception enclosedException) {
        super(message, enclosedException);
        
        if (enclosedException instanceof ESErrorCode){
            setErrCode(((ESErrorCode)enclosedException).getErrCode());
        }
    }

    public int getErrCode() {
        return errCode;
    }

    public ESAppException setErrCode(int errCode) {
        this.errCode = errCode;
        return this;
    }
	
	public String getMessage() {
		return "Error " + errCode + ": " + super.getMessage();
	}
	
	/**
	 * Used by subclass to init it's own specific default errCode, if the errCode been set, skip<p>
	 * be caution with this method, if the exception has sub class, should override this method 
	 * or do not call this method in its own initial step.<p>
	 * see ESObjectNotFoundException for example
	 * @param errCode
	 */
	protected void initErrCode(int errCode){
		if (this.errCode == 0){
			this.errCode = errCode;
		}
	}

}


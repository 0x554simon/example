<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd">			

	<context:property-placeholder location="classpath:newsim.properties"/>
	<bean id="aopBeanProcess" class="cn.itsz.newsim.common.AopBeanProcess" />
	<aop:aspectj-autoproxy/>
	<aop:config>
		<aop:aspect ref="aopBeanProcess">
			<aop:around method="doApplyProcessor"
						pointcut="bean(facade*)"/>
		</aop:aspect>
	</aop:config>
	<context:annotation-config />
	<context:component-scan base-package="cn.itsz.newsim" />	
	
	<import resource="classpath:dataSource.xml"/>
	
	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
				<ref bean="removeOrderCronTrigger" />
				<ref bean="removeQueuingOrderCronTrigger" />
			</list>
		</property>
		<!-- Quartz配置 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		<!-- 启动时延期3秒开始任务 -->
		<property name="startupDelay" value="3" />
	</bean>
	
	<!-- Cron式Trigger定义 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="cronJobDetail" />
		<!-- 周一至五,朝九晚五工作时间内每一分钟执行一次 -->
		<property name="cronExpression" value="0 0/1 * ? * MON-FRI" />
	</bean>
	
	<bean id="removeOrderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="removeOrderCronJobDetail" />
		<!-- 每天早上00:30执行一次 -->
		<property name="cronExpression" value="0 30 00 ? * MON-FRI" />
	</bean>

	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="cronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cronJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>
	
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="removeOrderCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cronJob" />
		<property name="targetMethod" value="removeAllOrder" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>
	
	
	<!-- removeQueuingOrder -->
	<bean id="removeQueuingOrderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="removeQueuingOrderCronJobDetail" />
		<!-- 周一至五 每5分钟执行一次-->
		<property name="cronExpression" value="0 0/5 * ? * MON-FRI" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="removeQueuingOrderCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cronJob" />
		<property name="targetMethod" value="removeQueuingOrder" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<bean id="cronJob" class="cn.itsz.newsim.schedule.QuartzJob" />
</beans>


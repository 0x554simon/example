<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd" default-lazy-init="false">

    	
	<import resource="dataSource.xml" />
	<import resource="rtqbeans.xml" />
	<!-- facade -->
	<bean id = "facade" class = "com.itsz.sht.service.FacadeImpl">
	    <property name ="commonService" ref="commonService"/>
	</bean>
	<!-- business template -->
	<bean id = "IWEBTemplate" class = "com.itsz.sht.service.channels.web.WebBusinessTemplate" init-method="init">
		<property name ="mcsService" ref="mcsService" />
		<property name ="qsService" ref="qsService"/>
		<property name ="rtqService" ref="rtqService"/>
		<property name ="email" ref="email"/>
		<property name ="emcUtil" ref="emcUtil"/>
		<property name ="ipoMaintenanceDelegate" ref="ipoMaintenanceDelegate"/>
		<property name ="ipoQtyAmtDelegate" ref="ipoQtyAmtDelegate"/>
		<property name ="ipoRequestDelegate" ref="ipoRequestDelegate"/>
		<property name ="ipoResultDelegate" ref="ipoResultDelegate"/>
		<property name ="fundDepositDelegate" ref="fundDepositDelegate"/>
	</bean>
	<bean id = "IWINTemplate" class = "com.itsz.sht.service.channels.ps.PsBusinessTemplate" init-method="init">
		<property name ="mcsService" ref="mcsService" />
		<property name ="qsService" ref="qsService"/>
		<property name ="rtqService" ref="rtqService"/>
	</bean>
	<!-- api -->
	<bean id = "mcsService" class = "com.itsz.sht.service.mcs.McsServiceImpl">
		<property name ="messageSender" ref="messageSender"/>
	</bean>
	<bean id = "qsService" class = "com.itsz.sht.service.qs.QsServiceImpl"/>
	
	<bean id="commonService" class="com.itsz.sht.service.common.CommonServiceImpl" /> 	
	
	<!-- vp mapping -->
	<bean id = "IWEBViewProvider" class = "com.itsz.sht.vp.web.WebViewProvider"/>
	<bean id = "IWINViewProvider" class = "com.itsz.sht.vp.ps.PsViewProvider"/>
   
	<bean id = "channelsParamInit" class = "com.itsz.sht.common.ChannelsParamInit">
		<property name="channelMap">
			<map>
			    <entry key="S" value="IWIN"/>
			    <entry key="W" value="IWEB"/>
			</map>
		</property>
		<property name="channelIdMap">
			<map>
			    <entry key="S" value="IWIN01"/>
			    <entry key="W" value="IWEB01"/>
			</map>
		</property>
		<property name="languageMap">
			<map>
			    <entry key="E" value="ENG"/>
			    <entry key="G" value="GB"/>	
			    <entry key="T" value="BIG5"/>
			</map>
		</property>
	</bean>
   
	<!-- MessageSender -->
	<bean id = "messageSender" class = "com.taifook.mcs.msg.MessageSender"/>
<!-- 
	<bean id="logUtil" class="com.itsz.sht.common.util.LogUtil">
		<property name="excludeMethodName">
			<set>
				<value>getLogin_pwd</value>
				<value>getNew_pwd</value>
				<value>getOrig_pwd</value>
				<value>getPwd</value>	
				<value>getPassword</value>						
			</set>
		</property>
	</bean>
 -->
	<bean id = "ipoMaintenanceDelegate" class = "com.itsz.sht.dao.delegate.IPOMaintenanceDelegate">
		<property name ="ipoDAO" ref="ipoDAO" />
	</bean>	
	
	<bean id = "ipoQtyAmtDelegate" class = "com.itsz.sht.dao.delegate.IPOQtyAmtDelegate">
		<property name ="ipoQtyAmtDAO" ref="ipoQtyAmtDAO" />
	</bean>	
	
	<bean id = "ipoRequestDelegate" class = "com.itsz.sht.dao.delegate.IPORequestDelegate">
		<property name ="ipoRequestDAO" ref="ipoRequestDAO" />
	</bean>	
	
	<bean id = "ipoResultDelegate" class = "com.itsz.sht.dao.delegate.IPOResultDelegate">
		<property name ="ipoResultDAO" ref="ipoResultDAO" />
	</bean>
	
	<bean id = "fundDepositDelegate" class = "com.itsz.sht.dao.delegate.FundDepositDelegate">
		<property name ="fundDepositDAO" ref="fundDepositDAO" />
	</bean>
	
	<bean id="ipoDAO" class="com.itsz.sht.dao.impl.IPODAOHbmImpl">
        <property name="sessionFactory">
			<ref local="ipoSessionFactory" />
	    </property>
    </bean>
	
	<bean id="ipoQtyAmtDAO" class="com.itsz.sht.dao.impl.IPOQtyAmtDAOHbmImpl">
        <property name="sessionFactory">
			<ref local="ipoSessionFactory" />
	    </property>
    </bean>
	
	<bean id="ipoRequestDAO" class="com.itsz.sht.dao.impl.IPORequestDAOHbmImpl">
        <property name="sessionFactory">
			<ref local="ipoSessionFactory" />
	    </property>
    </bean>
	
	<bean id="ipoResultDAO" class="com.itsz.sht.dao.impl.IPOResultDAOHbmImpl">
        <property name="sessionFactory">
			<ref local="ipoSessionFactory" />
	    </property>
    </bean>
	
	<bean id="ipoSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">  
	    <property name="dataSource" ref="ipoDataSource" />  
	    <property name="mappingResources">  
	        <list>  
	              <value>com/itsz/sht/dao/hibernate/model/ChlIpoMaster.hbm.xml</value>
	              <value>com/itsz/sht/dao/hibernate/model/ChlIpoMasterCriteria.hbm.xml</value>  
	              <value>com/itsz/sht/dao/hibernate/model/ChlIpoClientAppl.hbm.xml</value>  
	              <value>com/itsz/sht/dao/hibernate/model/ChlIpoClientApplResult.hbm.xml</value> 
	        </list>
	    </property> 
	    	 
	    <property name='hibernateProperties'>
	       <props>
	               <prop key='hibernate.dialect'>org.hibernate.dialect.OracleDialect</prop>
	               <prop key='hibernate.show_sql'>false</prop>
	               <prop key='hibernate.format_sql'>true</prop>	
	       </props>
		</property>
	</bean>
	
    <!-- FundDeposit schedue -->
	
	<!-- Protector schedue --> 	
 	<bean id="fundDepositJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
		     <value>com.itsz.sht.common.util.FundDepositJob</value>
		</property>
	</bean>	
	<bean id="fundDepositTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" >
	    <property name="jobDetail" ref="fundDepositJob" />
	    <property name="cronExpression" value="0 0/30 * * * ?" /> 
		 <!-- start Delay 20 seconds 
        <property name="startDelay" value="20000" /> -->
		 <!--repeat every 60*1 seconds 
        <property name="repeatInterval" value="60000" /> -->
	</bean> 
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
		    <list>
		        <ref bean="fundDepositTrigger"/>
		    </list>
		</property>
	</bean>	

    <aop:aspectj-autoproxy/>
    <context:annotation-config />
    <context:component-scan base-package="**" />
</beans>